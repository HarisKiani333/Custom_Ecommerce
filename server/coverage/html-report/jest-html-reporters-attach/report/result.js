window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":20,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":20,"startTime":1757180495564,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757180498554,"runtime":2910,"slow":false,"start":1757180495644},"testFilePath":"F:\\Husk_Store\\Custom_Ecommerce\\server\\tests\\routes\\cart.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Cart Routes","GET /api/cart/get"],"duration":59,"failureMessages":[],"fullName":"Cart Routes GET /api/cart/get should retrieve user cart successfully","status":"passed","title":"should retrieve user cart successfully"},{"ancestorTitles":["Cart Routes","GET /api/cart/get"],"duration":24,"failureMessages":[],"fullName":"Cart Routes GET /api/cart/get should return empty cart for new user","status":"passed","title":"should return empty cart for new user"},{"ancestorTitles":["Cart Routes","GET /api/cart/get"],"duration":23,"failureMessages":[],"fullName":"Cart Routes GET /api/cart/get should return 401 for unauthorized user","status":"passed","title":"should return 401 for unauthorized user"},{"ancestorTitles":["Cart Routes","GET /api/cart/get"],"duration":16,"failureMessages":[],"fullName":"Cart Routes GET /api/cart/get should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token"},{"ancestorTitles":["Cart Routes","GET /api/cart/get"],"duration":16,"failureMessages":[],"fullName":"Cart Routes GET /api/cart/get should handle server errors gracefully","status":"passed","title":"should handle server errors gracefully"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":33,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should add new item to cart successfully","status":"passed","title":"should add new item to cart successfully"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":16,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should update existing item quantity in cart","status":"passed","title":"should update existing item quantity in cart"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":17,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should remove item from cart when quantity is 0","status":"passed","title":"should remove item from cart when quantity is 0"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":20,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should handle multiple items in cart","status":"passed","title":"should handle multiple items in cart"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":18,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 401 for unauthorized user","status":"passed","title":"should return 401 for unauthorized user"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":16,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 400 for missing required fields","status":"passed","title":"should return 400 for missing required fields"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":15,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 400 for invalid product ID","status":"passed","title":"should return 400 for invalid product ID"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":15,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 400 for negative quantity","status":"passed","title":"should return 400 for negative quantity"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":15,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 404 for non-existent product","status":"passed","title":"should return 404 for non-existent product"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":13,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 400 for unavailable size","status":"passed","title":"should return 400 for unavailable size"},{"ancestorTitles":["Cart Routes","POST /api/cart/update"],"duration":14,"failureMessages":[],"fullName":"Cart Routes POST /api/cart/update should return 400 for insufficient stock","status":"passed","title":"should return 400 for insufficient stock"},{"ancestorTitles":["Cart Routes","Edge Cases and Error Handling"],"duration":18,"failureMessages":[],"fullName":"Cart Routes Edge Cases and Error Handling should handle malformed JSON in request body","status":"passed","title":"should handle malformed JSON in request body"},{"ancestorTitles":["Cart Routes","Edge Cases and Error Handling"],"duration":16,"failureMessages":[],"fullName":"Cart Routes Edge Cases and Error Handling should handle very large quantity values","status":"passed","title":"should handle very large quantity values"},{"ancestorTitles":["Cart Routes","Edge Cases and Error Handling"],"duration":14,"failureMessages":[],"fullName":"Cart Routes Edge Cases and Error Handling should handle concurrent cart updates","status":"passed","title":"should handle concurrent cart updates"},{"ancestorTitles":["Cart Routes","Edge Cases and Error Handling"],"duration":16,"failureMessages":[],"fullName":"Cart Routes Edge Cases and Error Handling should handle database connection errors","status":"passed","title":"should handle database connection errors"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["routes/**/*.js","controllers/**/*.js","middleware/**/*.js","models/**/*.js","utils/**/*.js","!**/node_modules/**","!**/tests/**","!**/coverage/**","!jest.config.js","!server.js"],"coverageDirectory":"F:\\Husk_Store\\Custom_Ecommerce\\server\\coverage","coverageProvider":"babel","coverageReporters":["text","text-summary","lcov","html","json"],"coverageThreshold":{"global":{"branches":50,"functions":50,"lines":50,"statements":50}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":["tests/routes/cart.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["F:\\Husk_Store\\Custom_Ecommerce\\server\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./coverage/html-report","filename":"report.html","expand":true,"hideIcon":false,"pageTitle":"API Routes Test Report","inlineSource":false}]],"rootDir":"F:\\Husk_Store\\Custom_Ecommerce\\server","runTestsByPath":false,"seed":1509079463,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"tests\\\\routes\\\\cart.test.js","testSequencer":"F:\\Husk_Store\\Custom_Ecommerce\\server\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchPlugins":[{"config":{},"path":"F:\\Husk_Store\\Custom_Ecommerce\\server\\node_modules\\jest-watch-typeahead\\build\\file_name_plugin\\plugin.js"},{"config":{},"path":"F:\\Husk_Store\\Custom_Ecommerce\\server\\node_modules\\jest-watch-typeahead\\build\\test_name_plugin\\plugin.js"}],"watchman":true,"workerThreads":false},"endTime":1757180498565,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"report.html","expand":true,"pageTitle":"API Routes Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})